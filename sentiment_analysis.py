import requests
import pandas as pd
from finviz_scraper import get_fundamentals, get_news, get_insider
analyst_recommendations = requests.get('https://finnhub.io/api/v1/stock/recommendation?symbol=MSFT&token=c2hc30qad3ifd59bm8m0')
company_news = requests.get('https://finnhub.io/api/v1/company-news?symbol=MSFT&from=2020-10-01&to=2021-05-18&token=c2hc30qad3ifd59bm8m0')
news_sentiment = requests.get('https://finnhub.io/api/v1/news-sentiment?symbol=MSFT&token=c2hc30qad3ifd59bm8m0')
basic_financials = requests.get('https://finnhub.io/api/v1/stock/metric?symbol=MSFT&metric=all&token=c2hc30qad3ifd59bm8m0')
insider_transactions = requests.get('https://finnhub.io/api/v1/stock/insider-transactions?symbol=MSFT&from=2020-10-01&to=2021-05-18&token=c2hc30qad3ifd59bm8m0')
financial_as_reported = requests.get('https://finnhub.io/api/v1/stock/financials-reported?symbol=MSFT&token=c2hc30qad3ifd59bm8m0')
SEC_Filings = requests.get('https://finnhub.io/api/v1/stock/filings?symbol=MSFT&token=c2hc30qad3ifd59bm8m0')
Earning_Surprises = requests.get('https://finnhub.io/api/v1/stock/earnings?symbol=MSFT&token=c2hc30qad3ifd59bm8m0')
pattern_recognition = requests.get('https://finnhub.io/api/v1/scan/pattern?symbol=MSFT&resolution=5&token=c2hc30qad3ifd59bm8m0')
support_resistance = requests.get('https://finnhub.io/api/v1/scan/support-resistance?symbol=MSFT&resolution=5&token=c2hc30qad3ifd59bm8m0')
aggregate_indicator = requests.get('https://finnhub.io/api/v1/scan/technical-indicator?symbol=MSFT&resolution=D&token=c2hc30qad3ifd59bm8m0')
analyst_recommendations = pd.DataFrame.from_dict(analyst_recommendations.json())
company_news = pd.DataFrame.from_dict(company_news.json())
company_news['datetime'] = pd.to_datetime(company_news['datetime'], unit='s')
print(company_news)
news_sentiment = pd.DataFrame.from_dict(news_sentiment.json())
basic_financials = pd.DataFrame.from_dict(basic_financials.json())
insider_transactions = get_insider(symbol='MSFT')
financial_as_reported = pd.DataFrame.from_dict(financial_as_reported.json())
SEC_Filings = pd.DataFrame.from_dict(SEC_Filings.json())
Earning_Surprises = pd.DataFrame.from_dict(Earning_Surprises.json())
pattern_recognition = pd.DataFrame.from_dict(pattern_recognition.json())
support_resistance = pd.DataFrame.from_dict(support_resistance.json())
aggregate_indicator = pd.DataFrame.from_dict(aggregate_indicator.json())
company_news_two = get_news(symbol='MSFT')

analyst_recommendations.to_csv('MSFT/' + 'analyst_recommendations.csv')
company_news.to_csv('MSFT/' + 'company_news.csv')
news_sentiment.to_csv('MSFT/' + 'news_sentiment.csv')
basic_financials.to_csv('MSFT/' + 'basic_financials.csv')
insider_transactions.to_csv('MSFT/' + 'insider_transactions.csv')
financial_as_reported.to_csv('MSFT/' + 'financial_as_reported.csv')
SEC_Filings.to_csv('MSFT/' + 'SEC_Filings.csv')
Earning_Surprises.to_csv('MSFT/' + 'Earning_Surprises.csv')
pattern_recognition.to_csv('MSFT/' + 'pattern_recognition.csv')
support_resistance.to_csv('MSFT/' + 'support_resistance.csv')
aggregate_indicator.to_csv('MSFT/' + 'aggregate_indicator.csv')
company_news_two.to_csv('MSFT/' + 'company_news_two.csv')


